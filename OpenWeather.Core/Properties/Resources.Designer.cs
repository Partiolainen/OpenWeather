//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.Resources;
using System.Runtime.CompilerServices;

namespace OpenWeather.Properties {
	/// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [GeneratedCode("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [DebuggerNonUserCode()]
    [CompilerGenerated()]
    internal class Resources {
        
        private static ResourceManager resourceMan;
        
        private static CultureInfo resourceCulture;
        
        [SuppressMessage("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static ResourceManager ResourceManager {
            get {
                if (ReferenceEquals(resourceMan, null)) {
                    ResourceManager temp = new ResourceManager("OpenWeather.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        internal static CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # Author Ryan Cooper, OpenWeather Project
        ///# Updated: 08.06.16 (dd.mm.yy)
        ///#
        ///# METAR and ICAO compliant weather station list.
        ///# Adapted from Greg Thompson&apos;s list https://www.aviationweather.gov/static/adds/metars/stations.txt
        ///#
        ///# ICAO, Latitude (aprox), Longitude (aprox), Elevation (meters), Country code, Region code, Name/City
        ///#
        ///
        ///PAKH,56.9333333333333,-154.183333333333,14,US,AK,AKHIOK
        ///PAUT,54.15,-165.6,25,US,AK,AKUTAN
        ///PAFM,67.1,-157.85,88,US,AK,AMBLER
        ///PAKP,68.1333333333333,-151.733333333333,642,U [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string official_stations {
            get {
                return ResourceManager.GetString("official_stations", resourceCulture);
            }
        }
    }
}
