{
  "name": "OpenWeather",
  "tagline": "An open source library for METAR data retrieval",
  "body": "### Welcome to OpenWeather.\r\nOpen Weather is a simple library designed to take a coordinate (latitude and longitude) and find the closest weather station to that coordinate while also getting the current METAR weather data and parsing it. It has other features like being cross-platform (Windows/Linux/Android), searching by ICAO codes, automatic update intervals, and unit conversions. We hope to be adding more and more features as development continues!\r\n\r\n### Pre-Compiled Packages\r\nYou can get a pre-compiled nuget package by searching OpenWeather in NuGet or going directly to our NuGet page:\r\n[https://www.nuget.org/packages/OpenWeather/](https://www.nuget.org/packages/OpenWeather/)\r\n\r\n### The Data\r\nAll the METAR data is obtained through [NOAA](http://www.noaa.gov/) and the [Aviation Weather Center](https://www.aviationweather.gov/).\r\nOur weather station lookup list is adapted from Greg Thompson's station list which can be found [here](https://www.aviationweather.gov/static/adds/metars/stations.txt). The adaptation of this list is stored as a project resource in OpenWeather, and can be found [here](https://raw.githubusercontent.com/rooper149/OpenWeather/master/OpenWeather/Resources/official_stations.csv).\r\n\r\n### Getting Started\r\nIt's easy to search for a station and start getting weather data!\r\n\r\n    private static void Main(string[] args)\r\n        {\r\n            var locationWeather = new LocationWeather(StationLookup.Instance.Lookup(-90, -180), new    Units(TemperatureUnit.DegreeCelsius,\r\n                PressureUnit.Millibar, SpeedUnit.KilometerPerHour, LengthUnit.Kilometer));\r\n\r\n            Console.WriteLine($\"Station: {locationWeather.Station.Name}\\n\" +\r\n                              $\"ICAO: {locationWeather.Station.ICAO}\\n\" +\r\n                              $\"Temperature: {locationWeather.Weather.Temperature} {locationWeather.Units.TemperatureUnit}\\n\" +\r\n                              $\"Pressure: {locationWeather.Weather.Pressure} {locationWeather.Units.PressureUnit}\\n\" +\r\n                              $\"Wind Speed: {locationWeather.Weather.WindSpeed} {locationWeather.Units.WindSpeedUnit}\");\r\n            Console.ReadLine();\r\n        }\r\n\r\n### API\r\nWe have a web api that uses OpenWeather to demonstrated some of it's current capabilities, you can check it out [here](http://api.openweather.pw).\r\nSource for the api's ASP.NET project can be found at [OpenICAO](https://github.com/rooper149/OpenICAO) on GitHub.\r\n\r\n### License\r\nOpenWeather is under the BSD 3-Clause License, so feel _free_ to enjoy and use OpenWeather however you please.\r\n\r\n### Support or Contact\r\nRyan Cooper (@rooper149)\r\n[cooper.ryan@centaurisoftware.co](mailto:cooper.ryan@centaurisoftware.co)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}